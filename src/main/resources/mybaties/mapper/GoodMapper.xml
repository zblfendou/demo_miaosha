<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.GoodMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.Good">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, stock
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from good
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="getGoods" parameterType="com.example.demo.model.Good" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from good
        <where>
        </where>
    </select>
    <select id="getGood" resultType="com.example.demo.model.Good" parameterType="com.example.demo.model.Good">
        select
        <include refid="Base_Column_List"></include>
        from good
        <where>
            <if test=" null != id and '' != id">
                and id = #{id}
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from good
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.example.demo.model.Good">
    insert into good (id, name, stock
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.Good">
        insert into good
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="stock != null">
                stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Good">
        update good
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Good">
    update good
    set name = #{name,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="reduceStock" parameterType="com.example.demo.model.Good">
         update good
           set stock = stock - #{reduceStock}
           where id = #{id} and stock >= #{reduceStock} and stock >0
    </update>
</mapper>
